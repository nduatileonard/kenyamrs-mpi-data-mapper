/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.emr;

import com.emr.connections.KenyaEMRConnectionForm;
import com.emr.connections.MPIConnectionForm;
import com.emr.mappings.MappingsForm;
import com.emr.schemas.SavedProcessesDataMover;
import com.emr.schemas.SchemerMapper;
import com.emr.utilities.DatabaseManager;
import com.emr.utilities.FileManager;
import com.emr.utilities.LoggingOutputStream;
import com.emr.utilities.StdOutErrLevel;
import java.sql.Connection;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import java.io.PrintStream;
import java.util.logging.FileHandler;
import java.util.logging.Handler;
import java.util.logging.LogManager;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;


/**
 * Main class of the project. A JDesktopPane that should contain all the 
 * internal frames constituting the project.
 * @author LEONARD NDUATI
 */
public class EmrMpiDataMover extends JFrame {
    FileManager fileManager;
    DatabaseManager dbManager;
    Connection emrConn;
    /**
     * Creates new form EmrMpiDataMover
     */
    public EmrMpiDataMover() {
        fileManager=null;
        dbManager=null;
        emrConn=null;
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jToolBar1 = new javax.swing.JToolBar();
        btnKenyaEmrDb = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnMPIDb = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnDefineSchemas = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnSavedProcesses = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnDataMappings = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KenyaEMR to MPI Data Mover");

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jToolBar1.setRollover(true);

        btnKenyaEmrDb.setIcon(new ImageIcon(getClass().getResource("/db1.gif"), ""));
        btnKenyaEmrDb.setText("KenyaEMR Database");
        btnKenyaEmrDb.setToolTipText("Set and Test Connection to the KenyaEMR Database");
        btnKenyaEmrDb.setFocusable(false);
        btnKenyaEmrDb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnKenyaEmrDb.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnKenyaEmrDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKenyaEmrDbActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKenyaEmrDb);
        jToolBar1.add(jSeparator1);

        btnMPIDb.setIcon(new ImageIcon(getClass().getResource("/db2.png"), ""));
        btnMPIDb.setText("MPI Database");
        btnMPIDb.setToolTipText("Set and Test Connection to the MPI Database");
        btnMPIDb.setFocusable(false);
        btnMPIDb.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnMPIDb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMPIDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMPIDbActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMPIDb);
        jToolBar1.add(jSeparator2);

        btnDefineSchemas.setIcon(new ImageIcon(getClass().getResource("/db_schema.png"), ""));
        btnDefineSchemas.setText("Move Data From Schemas");
        btnDefineSchemas.setFocusable(false);
        btnDefineSchemas.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDefineSchemas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDefineSchemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefineSchemasActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDefineSchemas);
        jToolBar1.add(jSeparator3);

        btnSavedProcesses.setIcon(new ImageIcon(getClass().getResource("/move.png"), ""));
        btnSavedProcesses.setText("Move Data From Saved Processes");
        btnSavedProcesses.setFocusable(false);
        btnSavedProcesses.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSavedProcesses.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSavedProcesses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavedProcessesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSavedProcesses);
        jToolBar1.add(jSeparator4);

        btnDataMappings.setIcon(new ImageIcon(getClass().getResource("/mappings.png"), ""));
        btnDataMappings.setText("Mappings");
        btnDataMappings.setFocusable(false);
        btnDataMappings.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDataMappings.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDataMappings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataMappingsActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDataMappings);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(397, Short.MAX_VALUE))
        );
        jDesktopPane1.setLayer(jToolBar1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Handles click event for the Kenya EMR Database Button. 
     * Opens form for adding/editing connection details for the emr database
     * @param evt {@link ActionEvent} object
     */
    private void btnKenyaEmrDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKenyaEmrDbActionPerformed
        KenyaEMRConnectionForm frm=new KenyaEMRConnectionForm();
        frm.setLocation(40,20);
        frm.setSize(400, 350);
        jDesktopPane1.add(frm);
        frm.moveToFront();
        frm.setVisible(true);
    }//GEN-LAST:event_btnKenyaEmrDbActionPerformed
    /**
     * Handles click event for the MPI Database Button. 
     * Opens form for adding/editing connection details for the mpi database
     * @param evt {@link ActionEvent} object
     */
    private void btnMPIDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMPIDbActionPerformed
        MPIConnectionForm frm=new MPIConnectionForm();
        frm.setLocation(60,30);
        frm.setSize(400, 350);
        jDesktopPane1.add(frm);
        frm.moveToFront();
        frm.setVisible(true);
    }//GEN-LAST:event_btnMPIDbActionPerformed
    /**
     * Handles click event for the Move Data from Schema Button. 
     * Creates a connection to the emr database, and passes it to the SchemerMapper form to produce source tables/columns/relations
     * If the connection isn't a valid one, the form for adding the connection details will be opened
     * @param evt {@link ActionEvent} object
     */
    private void btnDefineSchemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefineSchemasActionPerformed
        //create db connection and passit along
        //Create KenyaEMR DB connection
        fileManager=new FileManager();
        String[] settings=fileManager.getConnectionSettings("emr_database.properties","emr");
        
        if(settings==null){
            //Connection settings not found
            JOptionPane.showMessageDialog(null, "Database Settings not found. Please set the connection settings for the KenyaEMR database first.", "KenyaEMR Database settings", JOptionPane.ERROR_MESSAGE);
            
            //Open KenyaEMRConnectionForm form
            KenyaEMRConnectionForm frm=new KenyaEMRConnectionForm();
            frm.setLocation(40,20);
            frm.setSize(400, 350);
            jDesktopPane1.add(frm);
            frm.moveToFront();
            frm.setVisible(true);
        }else{
            if(settings.length<1){
                
                JOptionPane.showMessageDialog(null, "Database Settings not found. Please set the connection settings for the KenyaEMR database.", "KenyaEMR Database settings", JOptionPane.ERROR_MESSAGE);
                
                //Open KenyaEMRConnectionForm form
                KenyaEMRConnectionForm frm=new KenyaEMRConnectionForm();
                frm.setLocation(40,20);
                frm.setSize(400, 350);
                jDesktopPane1.add(frm);
                frm.moveToFront();
                frm.setVisible(true);
            }else{
                //Connection settings are ok
                //We establish a connection
                dbManager=new DatabaseManager(settings[0], settings[1], settings[3], settings[4], settings[5]);
                emrConn=dbManager.getConnection();
                if(emrConn==null){
                    JOptionPane.showMessageDialog(null, "A connection to the KenyaEMR Database could not be established. Check your connection settings. Also, make sure the MySQL service is running.", "Connection Failed", JOptionPane.ERROR_MESSAGE);
                }else{
                    SchemerMapper frm=new SchemerMapper(emrConn,settings[3]); //connection obj, dbname
                    frm.setLocation(60,30);
                    frm.setSize(400, 400);
                    jDesktopPane1.add(frm);
                    frm.moveToFront();
                    frm.setVisible(true);
                    frm.addInternalFrameListener(new InternalFrameListener() {

                        public void internalFrameOpened(InternalFrameEvent e) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        public void internalFrameClosing(InternalFrameEvent e) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        public void internalFrameClosed(InternalFrameEvent e) {
                            btnDefineSchemas.setEnabled(true);
                        }

                        public void internalFrameIconified(InternalFrameEvent e) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        public void internalFrameDeiconified(InternalFrameEvent e) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        public void internalFrameActivated(InternalFrameEvent e) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        public void internalFrameDeactivated(InternalFrameEvent e) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }
                    });
                    btnDefineSchemas.setEnabled(false);
                }
            }
        }
        
    }//GEN-LAST:event_btnDefineSchemasActionPerformed
    /**
     * Handles click event for the Move data from saved processes button
     * Opens form showing all the saved processes
     * @param evt {@link ActionEvent}
     */
    private void btnSavedProcessesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavedProcessesActionPerformed
        SavedProcessesDataMover frm=new SavedProcessesDataMover(); 
        frm.setLocation(120,60);
        frm.setSize(600, 400);
        jDesktopPane1.add(frm);
        frm.moveToFront();
        frm.setVisible(true);
    }//GEN-LAST:event_btnSavedProcessesActionPerformed
    /**
     * Handles click event for the Mappings button
     * Opens form for adding/editing/deleting mappings
     * @param evt {@link ActionEvent}
     */
    private void btnDataMappingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataMappingsActionPerformed
        MappingsForm frm=new MappingsForm(); 
        frm.setLocation(120,60);
        frm.setSize(600, 400);
        jDesktopPane1.add(frm);
        frm.moveToFront();
        frm.setVisible(true);
    }//GEN-LAST:event_btnDataMappingsActionPerformed

    /**
     * Entry point of the program
     * @param args {@link String} the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmrMpiDataMover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmrMpiDataMover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmrMpiDataMover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmrMpiDataMover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // initialize logging to go to rolling log file
        LogManager logManager = LogManager.getLogManager();
        logManager.reset();
        try{
            // log file max size 100K, 3 rolling files, append-on-open
            Handler fileHandler = new FileHandler("log", 100000, 3, true);
            fileHandler.setFormatter(new SimpleFormatter());
            Logger.getLogger("").addHandler(fileHandler); 
            // preserve old stdout/stderr streams in case they might be useful
            PrintStream stdout = System.out;
            PrintStream stderr = System.err;
            // now rebind stdout/stderr to logger
            Logger logger;
            LoggingOutputStream los;

            logger = Logger.getLogger("stdout");
            los = new LoggingOutputStream(logger, StdOutErrLevel.STDOUT);
            System.setOut(new PrintStream(los, true));

            logger = Logger.getLogger("stderr");
            los= new LoggingOutputStream(logger, StdOutErrLevel.STDERR);
            System.setErr(new PrintStream(los, true));
        }catch(Exception e){
            System.out.println("Error opening file: " + e.getMessage());
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmrMpiDataMover().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDataMappings;
    private javax.swing.JButton btnDefineSchemas;
    private javax.swing.JButton btnKenyaEmrDb;
    private javax.swing.JButton btnMPIDb;
    private javax.swing.JButton btnSavedProcesses;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
